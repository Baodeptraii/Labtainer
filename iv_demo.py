from server import Server

def print_blocks(data, label="Ciphertext"):
    print(f"\nüî∏ {label} (len={len(data)}):")
    for i in range(0, len(data), 16):
        block = data[i:i+16]
        print(f"  Block {i//16}: {block.hex()}")

def iv_demo():
    # Th√¥ng ƒëi·ªáp c·ªë ƒë·ªãnh
    message = "This is a test message for IV demonstration!"
    print(f"Plaintext: {message}")

    # Key c·ªë ƒë·ªãnh
    key = "iv_demo_key_1234"
    server = Server(key)

    msg_bytes = message.encode()

    # IV 1: to√†n 0
    iv1 = bytes.fromhex("00000000000000000000000000000000")
    cipher1 = server.httpRequestForEncryptedText(msg_bytes, iv1)
    print_blocks(cipher1, "Ciphertext with IV = 0x00...")

    # IV 2: to√†n 0x11
    iv2 = bytes.fromhex("11111111111111111111111111111111")
    cipher2 = server.httpRequestForEncryptedText(msg_bytes, iv2)
    print_blocks(cipher2, "Ciphertext with IV = 0x11...")

    # IV random
    cipher3 = server.httpRequestForEncryptedText(msg_bytes)
    print_blocks(cipher3, "Ciphertext with random IV")

    # So s√°nh
    print("\nK·∫øt lu·∫≠n:")
    print("IV1 == IV2? ", cipher1 == cipher2)
    print("IV1 == Random? ", cipher1 == cipher3)

    if cipher1 != cipher2 and cipher1 != cipher3:
        print("K·∫øt qu·∫£: \nM·ªói IV t·∫°o ciphertext ho√†n to√†n kh√°c bi·ªát.")
        print("D√π plaintext v√† key gi·ªëng nhau, nh∆∞ng IV kh√°c ‚Üí ciphertext kh√°c.")
        print("ƒêi·ªÅu n√†y ch·ª©ng t·ªè IV l√† y·∫øu t·ªë quan tr·ªçng trong b·∫£o m·∫≠t c·ªßa thu·∫≠t to√°n m√£ h√≥a.")
        print("Nh∆∞ng BEAST l·ª£i d·ª•ng TLS 1.0 v√† CBC mode, khi·∫øn IV c√≥ th·ªÉ b·ªã ƒëo√°n ƒë∆∞·ª£c, d·∫´n ƒë·∫øn d·ªÖ b·ªã t·∫•n c√¥ng.")
    else:
        print("C√≥ g√¨ ƒë√≥ sai ‚Äî ciphertext ƒëang tr√πng nhau ?!")

if __name__ == "__main__":
    iv_demo()
